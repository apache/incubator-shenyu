# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: it

on:
  pull_request:
  push:
    branches:
      - master
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: '.github/filters.yml'
          list-files: json

  build-maven:
    needs: changes
    if: ${{ needs.changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: '.github/filters.yml'
          list-files: json
      - name: Cache Maven Repos
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: ./mvnw -B clean install -Prelease,docker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
      - name: Build examples
        run: ./mvnw -B clean install -Pexample -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -f ./shenyu-examples/pom.xml
      - name: Build integrated tests
        run: ./mvnw -B clean install -Pit -DskipTests -f ./shenyu-integrated-test/pom.xml

  integrated-tests:
    runs-on: ubuntu-latest
    needs:
      - changes
      - build-maven
    if: ${{ needs.changes.outputs.changed == 'true' }}
    strategy:
      matrix:
        case:
          - shenyu-integrated-test-alibaba-dubbo
          - shenyu-integrated-test-apache-dubbo
          - shenyu-integrated-test-grpc
          - shenyu-integrated-test-http
          - shenyu-integrated-test-https
          - shenyu-integrated-test-motan
          - shenyu-integrated-test-spring-cloud
          - shenyu-integrated-test-sofa
          - shenyu-integrated-test-brpc
          - shenyu-integrated-test-websocket
          - shenyu-integrated-test-combination
          - shenyu-integrated-test-sdk-apache-dubbo
          - shenyu-integrated-test-sdk-http
    steps:
      - name: Start docker compose
        run: docker-compose -f ./shenyu-integrated-test/${{ matrix.case }}/docker-compose.yml up -d
      - name: Wait for docker compose start up completely
        run: bash ./shenyu-integrated-test/${{ matrix.case }}/script/healthcheck.sh
      - name: Run test
        id: test
        run: ./mvnw test -Pit -f ./shenyu-integrated-test/${{ matrix.case }}/pom.xml
        continue-on-error: true
      - name: Check test result
        run: |
          docker-compose -f ./shenyu-integrated-test/${{ matrix.case }}/docker-compose.yml logs --tail="all"
          if [[ ${{steps.test.outcome}} == "failure" ]]; then
            echo "Test Failed"
            exit 1
          else
            echo "Test Successful"
            exit 0
          fi

  requirement:
    name: e2e
    if: ${{ needs.changes.outputs.changed == 'true' }}
    needs:
      - changes
      - build-maven
      - integrated-tests
    runs-on: ubuntu-latest
    steps:
      - name: checking job status
        run: |
          [[ "${{ needs.integrated-tests.result }}" == "success" ]] || exit -1