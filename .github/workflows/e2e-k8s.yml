# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: k8s-e2e-test

on:
  pull_request:
  push:
    branches:
      - e2e-k8s

jobs:
  k8s-shenyu-e2e:
    runs-on: ubuntu-latest
    if: (github.repository == 'moremind/shenyu')
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Free disk space
        run: |
          df --human-readable
          sudo apt clean
          docker rmi $(docker image ls --all --quiet)
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          df --human-readable

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: '.github/filters.yml'
          list-files: json

      - name: Install k8s
        if: steps.filter.outputs.changed == 'true'
        run: |
          curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -
          cat /etc/rancher/k3s/k3s.yaml
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

      - name: Set up JDK 8 for Building ShenYu
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Restore ShenYu E2E Maven Repos
        id: restore-e2e-maven-cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-e2e-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-e2e-maven-
      -
        name: Build with Maven
        if: steps.filter.outputs.changed == 'true'
        run: ./mvnw -B clean install -Prelease,docker -Dmaven.javadoc.skip=true -B -Drat.skip=true -Dmaven.test.skip=true -Djacoco.skip=true -DskipITs -DskipTests package -T1C

      - name: Build k8s Cluster
        if: steps.filter.outputs.changed == 'true'
        run: |
          docker save apache/shenyu-admin:latest apache/shenyu-bootstrap:latest | sudo k3s ctr images import -

      - name: Initialize Storage Container
        if: steps.filter.outputs.changed == 'true'
        run: |
          bash ./shenyu-e2e/k8s/script/init/mysql_container_init.sh
          bash ./shenyu-e2e/k8s/script/init/postgres_container_init.sh

      - name: Run E2E Tests
        if: steps.filter.outputs.changed == 'true'
        run: |
          bash ./shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/e2e-test-h2.sh
          bash ./shenyu-e2e/shenyu-e2e-case/shenyu-e2e-case-http/k8s/script/e2e-test-mysql.sh

      - name: Cluster Test after Healthcheck
        if: steps.filter.outputs.changed == 'true'
        run: |
          kubectl get all
          kubectl get events --all-namespaces
          kubectl logs -l app=shenyu-admin-mysql

      - name: Setup Debug Session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
        with:
          detached: true